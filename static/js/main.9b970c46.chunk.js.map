{"version":3,"sources":["Components/Search/Search.tsx","Components/UI/Loader/Loader.tsx","Components/UsersList/UsersList.tsx","Components/Timer/Timer.tsx","Components/UserDetails/UserDetails.tsx","Components/Github/Github.tsx","App.tsx","index.tsx"],"names":["Search","initialValue","onSubmitHandler","useForm","register","handleSubmit","errors","formState","onSubmit","data","userName","trim","className","required","minLength","defaultValue","type","Loader","UsersList","searchName","selectedUser","onUserSelectHandler","onErrorHandler","useState","users","setUsers","showLoader","setShowLoader","useEffect","toggleLoader","value","a","then","axios","get","response","items","catch","finally","length","map","user","classNames","onClick","login","id","Timer","timerSeconds","onTimerTick","timerKey","localSeconds","setLocalSeconds","intervalID","setInterval","prev","clearInterval","UserDetails","userDetails","setUserDetails","setTimerSeconds","name","src","avatar_url","height","width","alt","html_url","href","target","rel","blog","followers","following","public_repos","public_gists","INITIAL_SEARCH","Github","setSelectedUser","setSearchName","showAlert","setShowAlert","document","title","setTimeout","showErrorAlert","role","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9b970c46.chunk.js","sourcesContent":["import React from 'react';\nimport { useForm, SubmitHandler } from 'react-hook-form';\n\ntype SearchPropsType = {\n    initialValue: string,\n    onSubmitHandler: (fixedValue: string) => void\n}\n\ntype Inputs = {\n    userName: string;\n};\n\nconst Search = ({ initialValue, onSubmitHandler }: SearchPropsType) => {\n    const { register, handleSubmit, formState: { errors } } = useForm<Inputs>();\n\n    const onSubmit: SubmitHandler<Inputs> = (data) => {\n        onSubmitHandler(data.userName.trim());\n    };\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)} className={'searchContainer'}>\n            <div className={'form-group row searchRow'}>\n                <label className={'form-label fs-5'}>Search user by username</label>\n                <input\n                    {\n                        ...register(\n                            'userName',\n                            {\n                                required: true,\n                                minLength: 1\n                            })\n                    }\n                    defaultValue={initialValue}\n                    className={'form-control me-3 searchBox'}\n                />\n                <button type={'submit'} className={'btn btn-primary searchButton'}>Find</button>\n            </div>\n            {errors.userName && <p className={'errorMessage'}>This field is required</p>}\n        </form>\n    );\n};\n\nexport default Search;\n","import React from 'react';\nimport './Loader.scss';\n\nconst Loader = () => (\n    <div className={'spinnerContainer'}>\n        <div className={'ldsSpinner'}>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n        </div>\n    </div>\n);\n\nexport default Loader;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport classNames from 'classnames';\nimport Loader from 'src/Components/UI/Loader/Loader';\n\ntype UsersListPropsType = {\n    searchName: string,\n    selectedUser: SearchUserType | null,\n    onUserSelectHandler: (user: SearchUserType) => void,\n    onErrorHandler: () => void\n}\n\ntype SearchUserType = {\n    id: number,\n    login: string\n}\n\ntype SearchResult = {\n    items: SearchUserType[]\n}\n\nconst UsersList = ({ searchName, selectedUser, onUserSelectHandler, onErrorHandler }: UsersListPropsType) => {\n    const [ users, setUsers ] = useState<SearchUserType[]>([]);\n    const [ showLoader, setShowLoader ] = useState<boolean>(false);\n\n    useEffect(() => {\n            async function toggleLoader(value: boolean) {\n                setShowLoader(value);\n            }\n\n            if(searchName) {\n                toggleLoader(true)\n                    .then(() => axios.get<SearchResult>(`https://api.github.com/search/users?q=${searchName}`))\n                    .then((response) => {\n                        setUsers(response.data.items);\n                    })\n                    .catch(() => onErrorHandler())\n                    .finally(() => toggleLoader(false));\n            }\n\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [ searchName ]\n    );\n\n    if(users.length === 0) {\n        return null;\n    }\n\n    return (\n        <div className={'card my-3 usersListContainer'}>\n            <label className={'form-label fs-5'}>Find users:</label>\n            <ul className={'list-group'}>\n                {showLoader && (<Loader/>)}\n                {!showLoader && users.map((user) =>\n                    <li key={user.id}\n                        className={classNames('list-group-item', 'list-group-item-action', 'userItem', { 'selected': selectedUser === user })}\n                        onClick={() => {\n                            onUserSelectHandler(user);\n                        }}>\n                        {user.login}\n                    </li>)}\n            </ul>\n        </div>\n    );\n};\n\nexport default UsersList;\n","import React, { useEffect, useState } from 'react';\n\ntype TimerPropType = {\n    timerSeconds: number\n    onTimerTick: (actualSeconds: number) => void,\n    timerKey: number | undefined\n}\n\nconst Timer = ({ timerSeconds, onTimerTick, timerKey }: TimerPropType) => {\n\n    const [ localSeconds, setLocalSeconds ] = useState(timerSeconds);\n\n    useEffect(() => {\n        setLocalSeconds(timerSeconds);\n    }, [ timerSeconds ]);\n\n    useEffect(() => {\n        onTimerTick(localSeconds);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ localSeconds ]);\n\n    useEffect(() => {\n        const intervalID = setInterval(() => {\n            setLocalSeconds((prev) => prev - 1);\n        }, 1000);\n\n        return () => {\n            clearInterval(intervalID);\n        };\n    }, [ timerKey ]);\n\n    return (\n        <div>\n            Time to close details: {localSeconds}\n        </div>\n    );\n};\n\nexport default Timer;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Timer from 'src/Components/Timer/Timer';\nimport { SearchUserType } from 'src/Components/Github/Github';\nimport Loader from 'src/Components/UI/Loader/Loader';\n\ntype UserType = {\n    id: number,\n    login: string,\n    name?: string,\n    avatar_url: string,\n    followers: number,\n    following: number,\n    public_repos: number,\n    public_gists: number,\n    html_url: string,\n    blog?: string\n}\n\ntype UserDetailsPropType = {\n    selectedUser: SearchUserType | null,\n    onErrorHandler: () => void\n}\n\nconst INITIAL_TIMER_SECONDS = 60;\n\nconst UserDetails = ({ selectedUser, onErrorHandler }: UserDetailsPropType) => {\n    const [ userDetails, setUserDetails ] = useState<UserType | null>(null);\n    const [ timerSeconds, setTimerSeconds ] = useState<number>(INITIAL_TIMER_SECONDS);\n    const [ showLoader, setShowLoader ] = useState<boolean>(false);\n\n    useEffect(() => {\n            async function toggleLoader(value: boolean) {\n                setShowLoader(value);\n            }\n\n            if(!!selectedUser) {\n                toggleLoader(true)\n                    .then(() => axios.get<UserType>(`https://api.github.com/users/${selectedUser.login}`))\n                    .then((response) => {\n                        setTimerSeconds(INITIAL_TIMER_SECONDS);\n                        setUserDetails(response.data);\n\n                    })\n                    .catch(() => onErrorHandler())\n                    .finally(() => toggleLoader(false));\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [ selectedUser ]\n    );\n\n    useEffect(() => {\n        if(timerSeconds < 1) {\n            setUserDetails(null);\n        }\n    }, [ timerSeconds ]);\n\n    return (\n        <>\n            {showLoader && (\n                <div className={'loaderContainer'}>\n                    <Loader/>\n                </div>\n            )}\n            {!showLoader && userDetails && (\n                <div className={'card userDetailsContainer'}>\n                    <Timer timerSeconds={timerSeconds} onTimerTick={setTimerSeconds} timerKey={selectedUser?.id}/>\n                    <h2>{userDetails.login}</h2>\n                    <h3>{userDetails.name}</h3>\n                    <hr/>\n                    <img src={userDetails.avatar_url} height={'250px'} width={'250px'} alt={'avatar'}/>\n                    {userDetails.html_url && (\n                        <>\n                            <hr/>\n                            <a\n                                href={userDetails.html_url}\n                                target={'_blank'}\n                                rel={'noreferrer'}\n                                className={'btn btn-dark'}\n                            >\n                                Open Profile\n                            </a>\n                        </>\n                    )}\n                    <hr/>\n                    <div className={'infoContainer'}>\n                        {userDetails.blog && (\n                            <span>\n                                    <strong>Website: </strong>\n                                    <a\n                                        href={userDetails.blog}\n                                        target={'_blank'}\n                                        rel={'noreferrer'}\n                                        className={'card-link'}\n                                    >\n                                        {userDetails.blog}\n                                    </a>\n                                </span>\n                        )}\n                        <div className={'badge bg-success mt-1'}>Followers: {userDetails.followers}</div>\n                        <div className={'badge bg-success mt-1'}>Following: {userDetails.following}</div>\n                        <div className={'badge bg-success mt-1'}>Public repos: {userDetails.public_repos}</div>\n                        <div className={'badge bg-success mt-1'}>Public gists: {userDetails.public_gists}</div>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default UserDetails;\n","import React, { useEffect, useState } from 'react';\nimport './Github.scss';\nimport Search from 'src/Components/Search/Search';\nimport UsersList from 'src/Components/UsersList/UsersList';\nimport UserDetails from 'src/Components/UserDetails/UserDetails';\n\nexport type SearchUserType = {\n    id: number,\n    login: string\n}\n\nconst INITIAL_SEARCH = 'vgratsilev';\n\nconst Github = () => {\n    const [ selectedUser, setSelectedUser ] = useState<SearchUserType | null>(null);\n    const [ searchName, setSearchName ] = useState<string>(INITIAL_SEARCH);\n    const [ showAlert, setShowAlert ] = useState<boolean>(false);\n\n\n    useEffect(() => {\n        if(selectedUser) {\n            document.title = selectedUser.login;\n        }\n    }, [ selectedUser ]);\n\n    useEffect(() => {\n        if(showAlert) {\n            setTimeout(() => {\n                setSelectedUser(null);\n                setShowAlert(false);\n            }, 3000);\n        }\n    }, [ showAlert ]);\n\n    const showErrorAlert = () => setShowAlert(true);\n\n    return (\n        <>\n            <div className={'container'}>\n                <div>\n                    <Search initialValue={INITIAL_SEARCH} onSubmitHandler={setSearchName}/>\n                    <button\n                        type={'button'}\n                        className={'btn btn-secondary resetButton'}\n                        onClick={() => setSearchName(INITIAL_SEARCH)}\n                    >\n                        Reset\n                    </button>\n\n                    <UsersList\n                        searchName={searchName}\n                        selectedUser={selectedUser}\n                        onUserSelectHandler={setSelectedUser}\n                        onErrorHandler={showErrorAlert}\n                    />\n\n                </div>\n                <div>\n                    <UserDetails selectedUser={selectedUser} onErrorHandler={showErrorAlert}/>\n                </div>\n            </div>\n            {showAlert && (\n                <div className={'alert alert-danger'} role={'alert'}>\n                    Error fetching data\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Github;\n","import React from 'react';\nimport 'src/App.scss';\nimport Github from './Components/Github/Github';\n\nfunction App() {\n    return (\n        <div className={'App'}>\n            <Github/>\n        </div>\n    );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}